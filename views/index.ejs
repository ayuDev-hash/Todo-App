<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="styles/main.css" />
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700;900&display=swap"
    rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <title>Todo App</title>
</head>

<body>
  <section class="vh-100">
    <div class="container py-5 h-100">
      <div class="row d-flex justify-content-center align-items-center h-100">
        <div class="col">
          <div class="card" id="list1" style="border-radius: 0.75rem; background-color: #eff1f2">
            <div class="card-body py-4 px-4 px-md-5">
              <p class="h1 text-center mt-3 mb-4 pb-3 text-primary">
                <i class="fas fa-check-square me-1"></i>
                <u>My Todo-s</u>
              </p>

              <div class="pb-2">
                <div class="card">
                  <div class="card-body">
                    <form action="/add" method="post">
                      <div class="d-flex flex-row align-items-center">
                        <input type="text" class="form-control form-control-lg" autocomplete="off" name="newItems"
                          id="exampleFormControlInput1" placeholder="What do you need to do?" />
                        <input class="me-2" type="date" name="dueDate" required />
                        <input type="hidden" name="status" value="in-progress">
                      
                        <div>
                          <button type="submit" class="btn btn-primary">
                            Add
                          </button>
                        </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>

            <hr class="my-4" />

            <div class="d-flex justify-content-end align-items-center mb-4 pt-2 pb-3">
              <p class="small mb-0 me-2 text-muted">Filter</p>
              <select id="filter" class="select">
                <option value="all">All</option>
                <option value="completed">Completed</option>
                <option value="active">Active</option>
                <option value="has-due-date">Has due date</option>
                <option value="added-date">Added date</option>
                <option value="due-date">Due date</option>
              </select>
              <button class="ms-2 small mb-0 me-2 px-2" id="applyButton" onclick="applyFilter()">Apply</button>
            </div>


            <table class="table mb-4">
              <thead>

                <tr>
                  <th scope="col">No.</th>
                  <th scope="col">Todo item</th>
                  <th scope="col">Status</th>
                  <th scope="col">Due Date</th>
                  <th scope="col">Actions</th>
                </tr>
              </thead>

              <tbody>

                <% listItem.forEach((task, index)=> { %>
                  <tr>
                    <th scope="row">
                      <%= index + 1 %>
                    </th>
                    <td>
                      <%= task.item %>
                    </td>
                    <td class="<%= task.completed ? 'completed' : 'in-progress' %>" data-status="<%= task.completed ? 'completed' : 'in-progress' %>"> <%= task.completed ? 'Completed' : 'In Progress' %></td>
                    <td>
                      <%= task.date %>
                    </td>
                    <td>
                      <form action="delete" method="post">
                        <button type="submit" class="btn btn-danger" name="delete"
                          value="<%= task.item %>">Delete</button>
                        <button type="button" class="btn btn-success ms-1 finish-button">Finished</button>
                      </form>
                    </td>
                  </tr>
                  <%});%>
              </tbody>
            </table>

          </div>
        </div>
      </div>
    </div>
    </div>
  </section>


  <script>
  document.addEventListener("DOMContentLoaded", function () {
  // Add an event listener to all "Finished" buttons
  const finishButtons = document.querySelectorAll(".finish-button");

  finishButtons.forEach((button) => {
    button.addEventListener("click", function () {
      const taskRow = this.closest("tr");
      const statusCell = taskRow.querySelector("td[data-status]");
      const currentStatus = statusCell.getAttribute("data-status");

      if (currentStatus === "in-progress") {
        statusCell.setAttribute("data-status", "completed");
        statusCell.textContent = "Completed";
        statusCell.classList.add("completed"); // Add a class to style as completed
      } else {
        statusCell.setAttribute("data-status", "in-progress");
        statusCell.textContent = "In Progress";
        statusCell.classList.remove("completed"); // Remove the completed class
      }
    });
  });
});


document.addEventListener("DOMContentLoaded", function () {
  // Add an event listener to all "Delete" buttons
  const deleteButtons = document.querySelectorAll(".btn-danger");

  deleteButtons.forEach((button) => {
    button.addEventListener("click", function () {
      const taskRow = this.closest("tr");
      taskRow.remove(); // Remove the row from the table

      // Update item numbers for the remaining items
      const itemRows = document.querySelectorAll("tbody tr");
      itemRows.forEach((row, index) => {
        const itemNumberCell = row.querySelector("th");
        itemNumberCell.textContent = index + 1;
      });
    });
  });
});


function applyFilter() {
  const filterValue = document.getElementById("filter").value;

  // Select all task rows
  const taskRows = document.querySelectorAll("tbody tr");

  // Loop through task rows and apply the filter
  taskRows.forEach((row) => {
    const statusCell = row.querySelector("td[data-status]");
    const hasDueDate = statusCell.getAttribute("data-status") === "completed";

    switch (filterValue) {
      case "completed":
        row.style.display = statusCell.getAttribute("data-status") === "completed" ? "" : "none";
        break;
      case "active":
        row.style.display = statusCell.getAttribute("data-status") === "in-progress" ? "" : "none";
        break;
      case "has-due-date":
        row.style.display = hasDueDate ? "" : "none";
        break;
      case "added-date":
        // Implement added date filtering logic here if needed
        break;
      case "due-date":
        // Implement due date filtering logic here if needed
        break;
      default:
        row.style.display = "";
        break;
    }
  });
}

  </script>

</body>

</html>